///////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Error Code Definition - Used to Standardize Error Handling.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
//enum class ERROR_CODES : unsigned long long /// should exceed max to allow for easy negatives.
//{
//	/// Success
//	NO_ERROR = 0x00000000,
//	S_SUCCED = 0x00000001,
//
//	/// Warnings
//	W_WARNING_MIN = 0x50000000,
//	W_WARNING_MAX = 0x9FFFFFFF,
//
//	///Errors
//	E_ERROR_MIN = 0xA0000000,
//	E_UNKOWN = 0xFFFFFFFF,
//
//	E_SOCKET_INVALID = 0xF0000121,
//	E_SOCKET_UNKNOWN_FAIL = 0xF0000122,
//	E_SOCKET_FAILED_INITIALIZE = 0xF0000123,
//	E_SOCKET_FAILED_OPEN = 0xF0000124,
//	E_SOCKET_NO_CONNECTION = 0xF0000126,
//	E_SOCKET_FAILED_RECEIVE = 0xF0000127,
//	E_SOCKET_FAILED_SEND = 0xF0000128,
//	E_SOCKET_FAILED_LISTEN = 0xF0000129,
//	E_SOCKET_FAILED_SHUTDOWN = 0xF000012A,
//	E_SOCKET_FAILED_SELECT = 0xF000012B,
//	E_SOCKET_FAILED_CLOSE = 0xF000012C,
//	E_SOCKET_INVALID_ADDR = 0xF000012D,
//	E_SOCKET_INVALID_PORT = 0xF000012E,
//
//	E_SQL_FAILED_EXECUTE = 0xF0000257,
//
//	E_ERROR_MAX = 0xFFFFFFFFFFFFF,
//};



typedef unsigned long long ERROR_CODES;
#undef NO_ERROR
#define NO_ERROR (ERROR_CODES)0x00000000
#define S_SUCCED (ERROR_CODES)0x00000001
#define W_WARNING_MIN (ERROR_CODES)0x50000000
#define W_WARNING_MAX (ERROR_CODES)0x9FFFFFFF
#define E_ERROR_MIN (ERROR_CODES)0xA0000000
#define E_UNKOWN (ERROR_CODES)0xFFFFFFFF
#define E_SOCKET_INVALID (ERROR_CODES)0xF0000121
#define E_SOCKET_UNKNOWN_FAIL (ERROR_CODES)0xF0000122
#define E_SOCKET_FAILED_INITIALIZE (ERROR_CODES)0xF0000123
#define E_SOCKET_FAILED_OPEN (ERROR_CODES)0xF0000124
#define E_SOCKET_NO_CONNECTION (ERROR_CODES)0xF0000126
#define E_SOCKET_FAILED_RECEIVE (ERROR_CODES)0xF0000127
#define E_SOCKET_FAILED_SEND (ERROR_CODES)0xF0000128
#define E_SOCKET_FAILED_LISTEN (ERROR_CODES)0xF0000129
#define E_SOCKET_FAILED_SHUTDOWN (ERROR_CODES)0xF000012A
#define E_SOCKET_FAILED_SELECT (ERROR_CODES)0xF000012B
#define E_SOCKET_FAILED_CLOSE (ERROR_CODES)0xF000012C
#define E_SOCKET_INVALID_ADDR (ERROR_CODES)0xF000012D
#define E_SOCKET_INVALID_PORT (ERROR_CODES)0xF000012E
#define E_SQL_FAILED_EXECUTE (ERROR_CODES)0xF0000257
#define E_ERROR_MAX (ERROR_CODES)0xFFFFFFFFFF

		
class ErrorCode
{
private:
	ERROR_CODES m_Error;

public:
	ErrorCode();
	ErrorCode(const ERROR_CODES &err);

	ErrorCode operator=(const ErrorCode &err);
	ErrorCode operator=(const ERROR_CODES &err);
	bool operator!=(const ERROR_CODES &err);
	bool operator==(const ERROR_CODES &err);

	bool DidSucced();
	bool DidFail();
	void Reset();
};
